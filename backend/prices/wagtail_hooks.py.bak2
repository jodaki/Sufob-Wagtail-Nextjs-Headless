from django.urls import reverse
from django.utils.html import format_html
from wagtail import hooks
from wagtail.admin.menu import MenuItem
from wagtail.contrib.modeladmin.options import ModelAdmin, modeladmin_register, ModelAdminGroup
from .models import PriceData, DataImportLog
from .forms import PriceDataEntryForm


# PriceData ModelAdmin
class PriceDataAdmin(ModelAdmin):
    model = PriceData
    menu_label = 'داده‌های قیمت'
    menu_icon = 'table'
    menu_order = 200
    list_display = ('commodity_name', 'price_date', 'final_price', 'avg_price', 'volume', 'created_at')
    list_filter = ('commodity_name', 'price_date', 'source', 'created_at')
    search_fields = ('commodity_name', 'symbol')
    inspect_view_enabled = True


# DataImportLog ModelAdmin
class DataImportLogAdmin(ModelAdmin):
    model = DataImportLog
    menu_label = 'لاگ‌های ورود داده'
    menu_icon = 'list-ul'
    menu_order = 201
    list_display = ('commodity_name', 'start_date', 'end_date', 'status', 'total_records', 'imported_records', 'created_at')
    list_filter = ('status', 'commodity_name', 'created_at')
    search_fields = ('commodity_name',)
    inspect_view_enabled = True


# PriceDataEntry ModelAdmin - برای ورود دستی اطلاعات
class PriceDataEntryAdmin(ModelAdmin):
    model = PriceData
    menu_label = 'ورود اطلاعات'
    menu_icon = 'edit'
    menu_order = 202
    form = PriceDataEntryForm
    
    # نمایش فقط فرم برای ایجاد رکورد جدید
    inspect_view_enabled = False
    list_display = ('commodity_name', 'price_date', 'final_price')
    
    # حذف قابلیت‌هایی که نیاز نداریم
    index_view_extra_js = None
    index_view_extra_css = None
    
    def get_form_fields_exclude(self, request, obj=None):
        # فیلدهایی که نباید در فرم باشند
        return ['created_at', 'updated_at']


# Register ModelAdmin classes
class PriceModelAdminGroup(ModelAdminGroup):
    menu_label = 'مدیریت قیمت‌ها'
    menu_icon = 'folder-open-inverse'
    menu_order = 200
    items = (PriceDataAdmin, DataImportLogAdmin, PriceDataEntryAdmin)


# Register the group
modeladmin_register(PriceModelAdminGroup)


# Custom CSS for Persian RTL support
@hooks.register('insert_global_admin_css')
def global_admin_css():
    return format_html(
        '<style>'
        '.object-list th, .object-list td {{ text-align: right; }}'
        '.listing {{ direction: rtl; }}'
        '</style>'
    )


# Custom editor CSS for rich text fields
@hooks.register('insert_editor_css')  
def editor_css():
    return format_html(
        '<style>'
        '.richtext {{ direction: rtl; text-align: right; }}'
        '</style>'
    )
